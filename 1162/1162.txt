var
        n,i,j,k,x,y,z,ans:longint;
        ch:array[1..300,1..3]of longint;
        f:array[1..300]of longint;
function max(i,j:longint):longint;
begin
    if i>j then exit(i) else exit(j);
end;
function min(i,j:longint):longint;
begin
    if i<j then exit(i) else exit(j);
end;
procedure kp(i,j:longint);
var l,r,mid,t:longint;
begin
    l:=i;
    r:=j;
    mid:=ch[(i+j)div 2,1];
    repeat
              while ch[l,1]>mid do inc(l);
              while ch[r,1]<mid do dec(r);
              if l<=r then
              begin
                  t:=ch[l,1];
                  ch[l,1]:=ch[r,1];
                  ch[r,1]:=t;
                  t:=ch[l,2];
                  ch[l,2]:=ch[r,2];
                  ch[r,2]:=t;
                  t:=ch[l,3];
                  ch[l,3]:=ch[r,3];
                  ch[r,3]:=t;
                  inc(l);
                  dec(r);
              end;
    until l>r;
    if l<j then kp(l,j);
    if i<r then kp(i,r);
end;
begin
    
      read(n);
      for i:=1 to n do
      begin
          read(x,y,z);
          ch[i*3-2,1]:=max(x,y);
          ch[i*3-2,2]:=min(x,y);
          ch[i*3-2,3]:=z;
          ch[i*3-1,1]:=max(z,x);
          ch[i*3-1,2]:=min(z,x);
          ch[i*3-1,3]:=y;
          ch[i*3,1]:=max(z,y);
          ch[i*3,2]:=min(z,y);
          ch[i*3,3]:=x;
      end;
      kp(1,n*3);
      for i:=n*3 downto 1 do
      begin
         f[i]:=ch[i,3];
         for j:=i+1 to n*3 do
         if (ch[i,1]>ch[j,1])and(ch[i,2]>ch[j,2])and(f[j]+ch[i,3]>f[i]) then
         begin
             f[i]:=max(f[i],f[j]+ch[i,3]);
             if f[i]>ans then ans:=f[i];
         end;
      end;
      writeln(ans);
      close(input);
      close(output);
end.